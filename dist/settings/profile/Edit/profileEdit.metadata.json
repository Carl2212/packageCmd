[{"__symbolic":"module","version":3,"metadata":{"ProfileEdit":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"profile-edit","template":"\n    <ion-header>\n      <ion-toolbar color=\"white\">\n        <ion-title>{{'setting.profile' | translate}}</ion-title>\n        <ion-buttons end>\n          <button ion-button clear color=\"primary\" (click)=\"editStatus == 2 ? del() : pop()\" margin-right [disabled]=\"editStatus == 2 && (pfService.loginProfileName == pfStore.name)\">\n            <ion-icon name=\"{{editStatus == 2 ? 'trash' :  'close'}}\"></ion-icon>\n          </button>\n          <button ion-button clear color=\"primary\" (click)=\"editStatus == 2 ? (editStatus = 3) :  save()\"\n                  [disabled]=\"pfService.loginProfileName == pfStore.name || (editStatus != 2 && !profileForm.valid)\">\n            <ion-icon name=\"{{editStatus == 2 ? 'edit' : 'lock'}}\"></ion-icon>\n          </button>\n        </ion-buttons>\n      </ion-toolbar>\n    </ion-header>\n    <ion-content>\n      <form #profileForm=\"ngForm\">\n        <ion-item text-right [class.error]=\"name.invalid && (name.dirty || name.touched)\">\n          <ion-label stacked><span class=\"err-msg\" >*</span>\n            <strong>{{'profileEdit.name' | translate}} : </strong>\n            <span class=\"err-msg\" *ngIf=\"name.invalid && (name.dirty || name.touched)\">\n\n              <span *ngIf=\"name.errors.required\">\n                {{'reminder.blank' | translate: {key : ''} }}\n              </span>\n              <span *ngIf=\"name.errors.uniqueValidator\">\n                {{'reminder.uniqueValid' | translate: {key : ''} }}\n              </span>\n            </span>\n          </ion-label>\n          <ion-input text-right [disabled]=\"editStatus == 2\" id=\"name\" type=\"text\"  [uniqueValidator]=\"profileNameGroup\" [(ngModel)]=\"pfStore.name\" name=\"name\"\n                     class=\"form-control\"\n                     required\n                     #name=\"ngModel\"></ion-input>\n        </ion-item>\n        <ion-item text-right [class.error]=\"loginName.invalid && (loginName.dirty || loginName.touched)\">\n          <ion-label stacked><span class=\"err-msg\">*</span>\n            <strong>{{'auth.userName' | translate}} : </strong>\n            <span class=\"err-msg\" *ngIf=\"loginName.invalid && (loginName.dirty || loginName.touched)\">{{'reminder.blank' | translate: {key : ''} }}</span>\n          </ion-label>\n          <ion-input text-right [disabled]=\"editStatus == 2\" id=\"loginName\" type=\"text\" [(ngModel)]=\"pfStore.loginName\" name=\"loginName\" class=\"form-control\" required #loginName=\"ngModel\"></ion-input>\n        </ion-item>\n        <ion-item text-right [class.error]=\"password.invalid && (password.dirty || password.touched)\">\n          <ion-label stacked><span class=\"err-msg\">*</span>\n            <strong>{{'auth.password' | translate}} : </strong>\n            <span class=\"err-msg\" *ngIf=\"password.invalid && (password.dirty || password.touched)\">{{'reminder.blank' | translate: {key : ''} }}</span>\n          </ion-label>\n          <ion-input text-right [disabled]=\"editStatus == 2\" id=\"password\" type=\"password\" [(ngModel)]=\"pfStore.password\" name=\"password\" class=\"form-control\" required\n                      #password=\"ngModel\"></ion-input>\n        </ion-item>\n        <ion-item text-right [class.error]=\"server.invalid && (server.dirty || server.touched)\">\n          <ion-label stacked><span class=\"err-msg\">*</span>\n            <strong>{{'auth.server' | translate}} : </strong>\n            <span class=\"err-msg\" *ngIf=\"server.invalid && (server.dirty || server.touched)\">{{'reminder.blank' | translate: {key : ''} }}</span>\n          </ion-label>\n          <ion-input text-right [disabled]=\"editStatus == 2\" id=\"server\" type=\"text\" [(ngModel)]=\"pfStore.server\" name=\"server\" class=\"form-control\" required #server=\"ngModel\"></ion-input>\n        </ion-item>\n        <button ion-item full detail-none text-right [disabled]=\"editStatus == 2 || loginName.invalid || password.invalid || server.invalid\" *ngIf=\"existCompanyRole\"\n                (click)=\"editStatus != 2 ? selectCompany() : null\">\n          <ion-label stacked><span class=\"err-msg\">*</span>\n            <strong>{{'setting.company' | translate}} & {{'auth.role' | translate}}: </strong>\n          </ion-label>\n          <ion-label text-right type=\"text\" >{{pfStore.company}}</ion-label>\n          <ion-label text-right type=\"text\" >{{pfStore.role}}</ion-label>\n          <ion-input text-right disabled hidden id=\"companyRole\" [(ngModel)]=\"pfStore.company\" type=\"text\" name=\"companyRole\" class=\"form-control\" required\n                     #companyRole=\"ngModel\"></ion-input>\n        </button>\n      </form>\n    </ion-content>\n  "}]}],"members":{"name":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["name"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"ionic-angular","name":"NavController"},{"__symbolic":"reference","module":"ionic-angular","name":"NavParams"},{"__symbolic":"reference","module":"../../../core/core.store","name":"CoreStore"},{"__symbolic":"reference","module":"../../../core/providers/profile/profile.store","name":"ProfileStore"},{"__symbolic":"reference","module":"../../../core/providers/profile/profile.service","name":"ProfileService"},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService"},{"__symbolic":"reference","module":"../../../core/providers/toast.service","name":"ToastService"},{"__symbolic":"reference","module":"ionic-angular","name":"AlertController"},{"__symbolic":"reference","module":"ionic-angular","name":"ViewController"},{"__symbolic":"reference","module":"../../../core/providers/loading.service","name":"LoadingService"}]}],"init":[{"__symbolic":"method"}],"getProfileNameGroup":[{"__symbolic":"method"}],"ionViewWillLeave":[{"__symbolic":"method"}],"selectCompany":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"pop":[{"__symbolic":"method"}],"del":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"ProfileEdit":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"profile-edit","template":"\n    <ion-header>\n      <ion-toolbar color=\"white\">\n        <ion-title>{{'setting.profile' | translate}}</ion-title>\n        <ion-buttons end>\n          <button ion-button clear color=\"primary\" (click)=\"editStatus == 2 ? del() : pop()\" margin-right [disabled]=\"editStatus == 2 && (pfService.loginProfileName == pfStore.name)\">\n            <ion-icon name=\"{{editStatus == 2 ? 'trash' :  'close'}}\"></ion-icon>\n          </button>\n          <button ion-button clear color=\"primary\" (click)=\"editStatus == 2 ? (editStatus = 3) :  save()\"\n                  [disabled]=\"pfService.loginProfileName == pfStore.name || (editStatus != 2 && !profileForm.valid)\">\n            <ion-icon name=\"{{editStatus == 2 ? 'edit' : 'lock'}}\"></ion-icon>\n          </button>\n        </ion-buttons>\n      </ion-toolbar>\n    </ion-header>\n    <ion-content>\n      <form #profileForm=\"ngForm\">\n        <ion-item text-right [class.error]=\"name.invalid && (name.dirty || name.touched)\">\n          <ion-label stacked><span class=\"err-msg\" >*</span>\n            <strong>{{'profileEdit.name' | translate}} : </strong>\n            <span class=\"err-msg\" *ngIf=\"name.invalid && (name.dirty || name.touched)\">\n\n              <span *ngIf=\"name.errors.required\">\n                {{'reminder.blank' | translate: {key : ''} }}\n              </span>\n              <span *ngIf=\"name.errors.uniqueValidator\">\n                {{'reminder.uniqueValid' | translate: {key : ''} }}\n              </span>\n            </span>\n          </ion-label>\n          <ion-input text-right [disabled]=\"editStatus == 2\" id=\"name\" type=\"text\"  [uniqueValidator]=\"profileNameGroup\" [(ngModel)]=\"pfStore.name\" name=\"name\"\n                     class=\"form-control\"\n                     required\n                     #name=\"ngModel\"></ion-input>\n        </ion-item>\n        <ion-item text-right [class.error]=\"loginName.invalid && (loginName.dirty || loginName.touched)\">\n          <ion-label stacked><span class=\"err-msg\">*</span>\n            <strong>{{'auth.userName' | translate}} : </strong>\n            <span class=\"err-msg\" *ngIf=\"loginName.invalid && (loginName.dirty || loginName.touched)\">{{'reminder.blank' | translate: {key : ''} }}</span>\n          </ion-label>\n          <ion-input text-right [disabled]=\"editStatus == 2\" id=\"loginName\" type=\"text\" [(ngModel)]=\"pfStore.loginName\" name=\"loginName\" class=\"form-control\" required #loginName=\"ngModel\"></ion-input>\n        </ion-item>\n        <ion-item text-right [class.error]=\"password.invalid && (password.dirty || password.touched)\">\n          <ion-label stacked><span class=\"err-msg\">*</span>\n            <strong>{{'auth.password' | translate}} : </strong>\n            <span class=\"err-msg\" *ngIf=\"password.invalid && (password.dirty || password.touched)\">{{'reminder.blank' | translate: {key : ''} }}</span>\n          </ion-label>\n          <ion-input text-right [disabled]=\"editStatus == 2\" id=\"password\" type=\"password\" [(ngModel)]=\"pfStore.password\" name=\"password\" class=\"form-control\" required\n                      #password=\"ngModel\"></ion-input>\n        </ion-item>\n        <ion-item text-right [class.error]=\"server.invalid && (server.dirty || server.touched)\">\n          <ion-label stacked><span class=\"err-msg\">*</span>\n            <strong>{{'auth.server' | translate}} : </strong>\n            <span class=\"err-msg\" *ngIf=\"server.invalid && (server.dirty || server.touched)\">{{'reminder.blank' | translate: {key : ''} }}</span>\n          </ion-label>\n          <ion-input text-right [disabled]=\"editStatus == 2\" id=\"server\" type=\"text\" [(ngModel)]=\"pfStore.server\" name=\"server\" class=\"form-control\" required #server=\"ngModel\"></ion-input>\n        </ion-item>\n        <button ion-item full detail-none text-right [disabled]=\"editStatus == 2 || loginName.invalid || password.invalid || server.invalid\" *ngIf=\"existCompanyRole\"\n                (click)=\"editStatus != 2 ? selectCompany() : null\">\n          <ion-label stacked><span class=\"err-msg\">*</span>\n            <strong>{{'setting.company' | translate}} & {{'auth.role' | translate}}: </strong>\n          </ion-label>\n          <ion-label text-right type=\"text\" >{{pfStore.company}}</ion-label>\n          <ion-label text-right type=\"text\" >{{pfStore.role}}</ion-label>\n          <ion-input text-right disabled hidden id=\"companyRole\" [(ngModel)]=\"pfStore.company\" type=\"text\" name=\"companyRole\" class=\"form-control\" required\n                     #companyRole=\"ngModel\"></ion-input>\n        </button>\n      </form>\n    </ion-content>\n  "}]}],"members":{"name":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["name"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"ionic-angular","name":"NavController"},{"__symbolic":"reference","module":"ionic-angular","name":"NavParams"},{"__symbolic":"reference","module":"../../../core/core.store","name":"CoreStore"},{"__symbolic":"reference","module":"../../../core/providers/profile/profile.store","name":"ProfileStore"},{"__symbolic":"reference","module":"../../../core/providers/profile/profile.service","name":"ProfileService"},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService"},{"__symbolic":"reference","module":"../../../core/providers/toast.service","name":"ToastService"},{"__symbolic":"reference","module":"ionic-angular","name":"AlertController"},{"__symbolic":"reference","module":"ionic-angular","name":"ViewController"},{"__symbolic":"reference","module":"../../../core/providers/loading.service","name":"LoadingService"}]}],"init":[{"__symbolic":"method"}],"getProfileNameGroup":[{"__symbolic":"method"}],"ionViewWillLeave":[{"__symbolic":"method"}],"selectCompany":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"pop":[{"__symbolic":"method"}],"del":[{"__symbolic":"method"}]}}}}]