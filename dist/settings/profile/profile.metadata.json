[{"__symbolic":"module","version":3,"metadata":{"Profile":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"profile","template":"\n    <ion-header>\n      <ion-toolbar color=\"white\">\n        <ion-title>{{'setting.profile' | translate}}</ion-title>\n        <ion-buttons end *ngIf=\"store.enableProfile\">\n          <button ion-button clear color=\"primary\" *ngIf=\"pfService?.profilegroup\" (click)=\"del()\" margin-right>\n            <ion-icon name=\"trash\"></ion-icon>\n          </button>\n          <button ion-button clear color=\"primary\" class=\"popover-icon-only\">\n            <ion-icon name=\"plus\"></ion-icon>\n            <ion-select interface=\"popover\" [(ngModel)]=\"addType\" (ngModelChange)=\"addTypeChange($event)\">\n              <ion-option  value=\"1\"> {{'profile.addfromlogin' | translate}}</ion-option>\n              <ion-option  value=\"2\"> {{'profile.addbymanual' | translate}}</ion-option>\n            </ion-select>\n          </button>\n        </ion-buttons>\n      </ion-toolbar>\n    </ion-header>\n    <ion-content>\n      <ion-list no-margin>\n        <ion-item tappable>\n          <ion-label>{{(!store.enableProfile ? 'profile.disabled' : 'profile.enabled') | translate}}</ion-label>\n          <ion-toggle item-right [(ngModel)]=\"store.enableProfile\" (ngModelChange)=\"enableProfile($event)\"></ion-toggle>\n        </ion-item>\n        <ion-item *ngIf=\"!store.enableProfile\" no-lines text-wrap>\n          <ion-note>\n            {{'profile.description' | translate}}\n          </ion-note>\n        </ion-item>\n        <ng-template [ngIf]=\"store.enableProfile && pfService?.profilegroup\">\n          <ion-item-sliding *ngFor=\"let l of pfService?.profilegroup\" #slidingItem>\n            <ion-item tappable (click)=\"toggleProfile(l)\">\n              <ion-icon color=\"primary\" item-left name=\"globe\">\n                <ion-icon name=\"checkmark-circle-filled\" color=\"balanced\" *ngIf=\"pfService.loginProfileName == l.name\"></ion-icon>\n              </ion-icon>\n              <ion-label> {{l.name}} </ion-label>\n              <ion-icon item-right name=\"arrow-forward-thin\"></ion-icon>\n\n            </ion-item>\n            <ion-item-options side=\"right\">\n              <button ion-button [navPush]=\"profileEdit\" [navParams]=\"{editStatus : 2 , profile : l}\" (click)=\"slidingItem.close()\">\n                <ion-icon name=\"edit\"></ion-icon>\n              </button>\n              <button ion-button color=\"danger\" (click)=\"del(l)\" [disabled]=\"pfService.loginProfileName == l.name\">\n                <ion-icon name=\"trash\"></ion-icon>\n              </button>\n            </ion-item-options>\n          </ion-item-sliding>\n        </ng-template>\n\n      </ion-list>\n      <no-content *ngIf=\"store.enableProfile && !pfService?.profilegroup\"></no-content>\n\n    </ion-content>\n  ","styles":["\n    .popover-icon-only{\n        position: relative;\n    }\n    .popover-icon-only ion-select{\n      width : 100%;\n      height : 100%;\n      position: absolute;\n      z-index : 99;\n      left : 0;\n    }\n    .popover-icon-only .select-text{\n      display: none;\n    }\n  "]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"ionic-angular","name":"NavController"},{"__symbolic":"reference","module":"../../core/providers/profile/profile.service","name":"ProfileService"},{"__symbolic":"reference","module":"../../core/core.store","name":"CoreStore"},{"__symbolic":"reference","module":"../../auth/auth.service","name":"AuthService"},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService"},{"__symbolic":"reference","module":"ionic-angular","name":"AlertController"},{"__symbolic":"reference","module":"../config","name":"SettingsService"},{"__symbolic":"reference","module":"../../core/providers/loading.service","name":"LoadingService"}]}],"ionViewDidLoad":[{"__symbolic":"method"}],"addTypeChange":[{"__symbolic":"method"}],"del":[{"__symbolic":"method"}],"toggleProfile":[{"__symbolic":"method"}],"enableProfile":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"Profile":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"profile","template":"\n    <ion-header>\n      <ion-toolbar color=\"white\">\n        <ion-title>{{'setting.profile' | translate}}</ion-title>\n        <ion-buttons end *ngIf=\"store.enableProfile\">\n          <button ion-button clear color=\"primary\" *ngIf=\"pfService?.profilegroup\" (click)=\"del()\" margin-right>\n            <ion-icon name=\"trash\"></ion-icon>\n          </button>\n          <button ion-button clear color=\"primary\" class=\"popover-icon-only\">\n            <ion-icon name=\"plus\"></ion-icon>\n            <ion-select interface=\"popover\" [(ngModel)]=\"addType\" (ngModelChange)=\"addTypeChange($event)\">\n              <ion-option  value=\"1\"> {{'profile.addfromlogin' | translate}}</ion-option>\n              <ion-option  value=\"2\"> {{'profile.addbymanual' | translate}}</ion-option>\n            </ion-select>\n          </button>\n        </ion-buttons>\n      </ion-toolbar>\n    </ion-header>\n    <ion-content>\n      <ion-list no-margin>\n        <ion-item tappable>\n          <ion-label>{{(!store.enableProfile ? 'profile.disabled' : 'profile.enabled') | translate}}</ion-label>\n          <ion-toggle item-right [(ngModel)]=\"store.enableProfile\" (ngModelChange)=\"enableProfile($event)\"></ion-toggle>\n        </ion-item>\n        <ion-item *ngIf=\"!store.enableProfile\" no-lines text-wrap>\n          <ion-note>\n            {{'profile.description' | translate}}\n          </ion-note>\n        </ion-item>\n        <ng-template [ngIf]=\"store.enableProfile && pfService?.profilegroup\">\n          <ion-item-sliding *ngFor=\"let l of pfService?.profilegroup\" #slidingItem>\n            <ion-item tappable (click)=\"toggleProfile(l)\">\n              <ion-icon color=\"primary\" item-left name=\"globe\">\n                <ion-icon name=\"checkmark-circle-filled\" color=\"balanced\" *ngIf=\"pfService.loginProfileName == l.name\"></ion-icon>\n              </ion-icon>\n              <ion-label> {{l.name}} </ion-label>\n              <ion-icon item-right name=\"arrow-forward-thin\"></ion-icon>\n\n            </ion-item>\n            <ion-item-options side=\"right\">\n              <button ion-button [navPush]=\"profileEdit\" [navParams]=\"{editStatus : 2 , profile : l}\" (click)=\"slidingItem.close()\">\n                <ion-icon name=\"edit\"></ion-icon>\n              </button>\n              <button ion-button color=\"danger\" (click)=\"del(l)\" [disabled]=\"pfService.loginProfileName == l.name\">\n                <ion-icon name=\"trash\"></ion-icon>\n              </button>\n            </ion-item-options>\n          </ion-item-sliding>\n        </ng-template>\n\n      </ion-list>\n      <no-content *ngIf=\"store.enableProfile && !pfService?.profilegroup\"></no-content>\n\n    </ion-content>\n  ","styles":["\n    .popover-icon-only{\n        position: relative;\n    }\n    .popover-icon-only ion-select{\n      width : 100%;\n      height : 100%;\n      position: absolute;\n      z-index : 99;\n      left : 0;\n    }\n    .popover-icon-only .select-text{\n      display: none;\n    }\n  "]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"ionic-angular","name":"NavController"},{"__symbolic":"reference","module":"../../core/providers/profile/profile.service","name":"ProfileService"},{"__symbolic":"reference","module":"../../core/core.store","name":"CoreStore"},{"__symbolic":"reference","module":"../../auth/auth.service","name":"AuthService"},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService"},{"__symbolic":"reference","module":"ionic-angular","name":"AlertController"},{"__symbolic":"reference","module":"../config","name":"SettingsService"},{"__symbolic":"reference","module":"../../core/providers/loading.service","name":"LoadingService"}]}],"ionViewDidLoad":[{"__symbolic":"method"}],"addTypeChange":[{"__symbolic":"method"}],"del":[{"__symbolic":"method"}],"toggleProfile":[{"__symbolic":"method"}],"enableProfile":[{"__symbolic":"method"}]}}}}]