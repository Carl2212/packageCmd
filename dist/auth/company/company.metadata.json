[{"__symbolic":"module","version":3,"metadata":{"Company":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"company","template":"\n    <ion-content  class=\"disable-env-top\">\n      <warning *ngIf=\"companiesError\" [msg]=\"companiesError\" (event)=\"getCompanies()\"></warning>\n      <ion-list radio-group [(ngModel)]=\"company\" [attr.padding-top]=\"state?null:''\" >\n        <ion-item-group *ngFor=\"let c of companies\">\n          <ion-item (click)=\"selectCompany(c)\" tappable [class.disable-env-left]=\"!authService.checkContext()\" class=\"disable-env-right\">\n            <ion-icon name=\"{{getIcon(c)}}\" item-left></ion-icon>\n            <ion-label>{{c.code}} {{c.name}}</ion-label>\n            <ion-radio [value]=\"c\" (ionSelect)=\"selectCompany(c)\" *ngIf=\"c.companyType!=2\"></ion-radio>\n            <ion-icon *ngIf=\"hasChild(c)\" name=\"arrow-{{c.isOpen?'down-thin':'forward-thin'}}\" item-right></ion-icon>\n          </ion-item>\n          <tree-node [list]=\"c.children\" *ngIf=\"hasChild(c)\" [hidden]=\"!c.isOpen\"></tree-node>\n        </ion-item-group>\n      </ion-list>\n    </ion-content>\n\n    <ion-footer class=\"bt\">\n      <ion-row padding-horizontal align-items-center>\n        <ion-label col>{{'auth.role' | translate}}</ion-label>\n        <ion-select  #roleSelect col [(ngModel)]=\"roleId\" interface=\"popover\" text-right [disabled]=\"!getRoles(company)\" \n                    [placeholder]=\"tlService.instant('reminder.select', {key: tlService.instant('auth.role')})\">\n          <ion-option value=\"{{r.id}}\" *ngFor=\"let r of getRoles(company)\">{{r.value}}</ion-option>\n        </ion-select>\n      </ion-row>\n      <ion-row no-padding>\n        <ion-col no-padding>\n          <button ion-button full no-margin color=\"gray\"navPop>{{'common.cancel' | translate}}</button>\n        </ion-col>\n        <ion-col no-padding>\n          <button ion-button full no-margin color=\"primary\" (click)=\"save()\" [disabled]=\"!company||!roleId\">{{'common.ok' | translate}}</button>\n        </ion-col>\n      </ion-row>\n    </ion-footer>\n  "}]}],"members":{"roleSelect":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":[{"__symbolic":"reference","module":"ionic-angular","name":"Select"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService"},{"__symbolic":"reference","module":"ionic-angular","name":"NavController"},{"__symbolic":"reference","module":"../auth.service","name":"AuthService"},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient"},{"__symbolic":"reference","module":"../../core/providers/toast.service","name":"ToastService"},{"__symbolic":"reference","module":"../../core/providers/loading.service","name":"LoadingService"},{"__symbolic":"reference","module":"ionic-angular","name":"NavParams"},{"__symbolic":"reference","module":"../../core/providers/profile/profile.service","name":"ProfileService"}]}],"selectCompany":[{"__symbolic":"method"}],"hasChild":[{"__symbolic":"method"}],"getIcon":[{"__symbolic":"method"}],"getRoles":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"init":[{"__symbolic":"method"}],"getCompanies":[{"__symbolic":"method"}],"sortByCode":[{"__symbolic":"method"}],"formatRoles":[{"__symbolic":"method"}],"formatNodes":[{"__symbolic":"method"}],"formatChildNodes":[{"__symbolic":"method"}],"selectNode":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"Company":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"company","template":"\n    <ion-content  class=\"disable-env-top\">\n      <warning *ngIf=\"companiesError\" [msg]=\"companiesError\" (event)=\"getCompanies()\"></warning>\n      <ion-list radio-group [(ngModel)]=\"company\" [attr.padding-top]=\"state?null:''\" >\n        <ion-item-group *ngFor=\"let c of companies\">\n          <ion-item (click)=\"selectCompany(c)\" tappable [class.disable-env-left]=\"!authService.checkContext()\" class=\"disable-env-right\">\n            <ion-icon name=\"{{getIcon(c)}}\" item-left></ion-icon>\n            <ion-label>{{c.code}} {{c.name}}</ion-label>\n            <ion-radio [value]=\"c\" (ionSelect)=\"selectCompany(c)\" *ngIf=\"c.companyType!=2\"></ion-radio>\n            <ion-icon *ngIf=\"hasChild(c)\" name=\"arrow-{{c.isOpen?'down-thin':'forward-thin'}}\" item-right></ion-icon>\n          </ion-item>\n          <tree-node [list]=\"c.children\" *ngIf=\"hasChild(c)\" [hidden]=\"!c.isOpen\"></tree-node>\n        </ion-item-group>\n      </ion-list>\n    </ion-content>\n\n    <ion-footer class=\"bt\">\n      <ion-row padding-horizontal align-items-center>\n        <ion-label col>{{'auth.role' | translate}}</ion-label>\n        <ion-select  #roleSelect col [(ngModel)]=\"roleId\" interface=\"popover\" text-right [disabled]=\"!getRoles(company)\" \n                    [placeholder]=\"tlService.instant('reminder.select', {key: tlService.instant('auth.role')})\">\n          <ion-option value=\"{{r.id}}\" *ngFor=\"let r of getRoles(company)\">{{r.value}}</ion-option>\n        </ion-select>\n      </ion-row>\n      <ion-row no-padding>\n        <ion-col no-padding>\n          <button ion-button full no-margin color=\"gray\"navPop>{{'common.cancel' | translate}}</button>\n        </ion-col>\n        <ion-col no-padding>\n          <button ion-button full no-margin color=\"primary\" (click)=\"save()\" [disabled]=\"!company||!roleId\">{{'common.ok' | translate}}</button>\n        </ion-col>\n      </ion-row>\n    </ion-footer>\n  "}]}],"members":{"roleSelect":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":[{"__symbolic":"reference","module":"ionic-angular","name":"Select"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService"},{"__symbolic":"reference","module":"ionic-angular","name":"NavController"},{"__symbolic":"reference","module":"../auth.service","name":"AuthService"},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient"},{"__symbolic":"reference","module":"../../core/providers/toast.service","name":"ToastService"},{"__symbolic":"reference","module":"../../core/providers/loading.service","name":"LoadingService"},{"__symbolic":"reference","module":"ionic-angular","name":"NavParams"},{"__symbolic":"reference","module":"../../core/providers/profile/profile.service","name":"ProfileService"}]}],"selectCompany":[{"__symbolic":"method"}],"hasChild":[{"__symbolic":"method"}],"getIcon":[{"__symbolic":"method"}],"getRoles":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"init":[{"__symbolic":"method"}],"getCompanies":[{"__symbolic":"method"}],"sortByCode":[{"__symbolic":"method"}],"formatRoles":[{"__symbolic":"method"}],"formatNodes":[{"__symbolic":"method"}],"formatChildNodes":[{"__symbolic":"method"}],"selectNode":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}]}}}}]