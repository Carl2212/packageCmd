[{"__symbolic":"module","version":3,"metadata":{"Login":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"template":"\n    <div class=\"nav\" padding>\n      <h2 text-center>{{'auth.login' | translate}}</h2>\n      <ion-item class=\"disable-env-all\">\n        <ion-label>{{'setting.language' | translate}}</ion-label>\n        <ion-select interface=\"popover\" [ngModel]=\"language\" (ngModelChange)=\"langChange($event)\">\n          <ion-option [value]=\"l.lang\" *ngFor=\"let l of langList\">{{l.name}}</ion-option>\n        </ion-select>\n      </ion-item>\n      <form [formGroup]=\"loginForm\">\n        <ion-item [class.error]=\"!username.valid&&username.touched\" class=\"disable-env-all\">\n          <ion-label [attr.stacked]=\"username.hasError('required')&&username.touched?'':null\">\n            {{'auth.userName' | translate}}\n            <span class=\"err-msg\" *ngIf=\"username.hasError('required')&&username.touched\">{{ 'reminder.blank' | translate: { key: ''} }}</span>\n          </ion-label>\n          <ion-input type=\"text\" [(ngModel)]=\"user.name\" [formControl]=\"username\" text-right></ion-input>\n        </ion-item>\n        <ion-item [class.error]=\"!password.valid&&password.touched\" class=\"disable-env-all\">\n          <ion-label [attr.stacked]=\"password.hasError('required')&&password.touched?'':null\">\n            {{'auth.password' | translate}}\n            <span class=\"err-msg\" *ngIf=\"password.hasError('required')&&password.touched\">{{'reminder.blank' | translate: { key: ''} }}</span>\n          </ion-label>\n          <ion-input type=\"password\" [(ngModel)]=\"user.password\" [formControl]=\"password\" text-right></ion-input>\n        </ion-item>\n      </form>\n      <button ion-button color=\"primary\" small float-right margin-top (click)=\"popToServer()\">{{'auth.serverSetting' | translate}}</button>\n    </div>\n\n    <ion-footer>\n      <button ion-button full no-margin color=\"gray\" (click)=\"loginWithProfile()\" *ngIf=\"coreStore.enableProfile && profileService.profilegroup\">\n        <ion-label color=\"primary\">{{'auth.loginWithProfile' | translate}}</ion-label>\n      </button>\n      <button ion-button full no-margin color=\"primary\" (click)=\"login()\" [disabled]=\"!loginForm.valid\">{{'auth.login' | translate}}</button>\n    </ion-footer>\n  "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService"},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder"},{"__symbolic":"reference","module":"ionic-angular","name":"NavController"},{"__symbolic":"reference","module":"../auth.service","name":"AuthService"},{"__symbolic":"reference","module":"../../core/providers/toast.service","name":"ToastService"},{"__symbolic":"reference","module":"../../core/providers/loading.service","name":"LoadingService"},{"__symbolic":"reference","module":"../../core/core.store","name":"CoreStore"},{"__symbolic":"reference","module":"../../core/providers/profile/profile.service","name":"ProfileService"}]}],"initForm":[{"__symbolic":"method"}],"initLoginInfo":[{"__symbolic":"method"}],"langChange":[{"__symbolic":"method"}],"login":[{"__symbolic":"method"}],"loginWithProfile":[{"__symbolic":"method"}],"popToServer":[{"__symbolic":"method"}],"setLangList":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"Login":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"template":"\n    <div class=\"nav\" padding>\n      <h2 text-center>{{'auth.login' | translate}}</h2>\n      <ion-item class=\"disable-env-all\">\n        <ion-label>{{'setting.language' | translate}}</ion-label>\n        <ion-select interface=\"popover\" [ngModel]=\"language\" (ngModelChange)=\"langChange($event)\">\n          <ion-option [value]=\"l.lang\" *ngFor=\"let l of langList\">{{l.name}}</ion-option>\n        </ion-select>\n      </ion-item>\n      <form [formGroup]=\"loginForm\">\n        <ion-item [class.error]=\"!username.valid&&username.touched\" class=\"disable-env-all\">\n          <ion-label [attr.stacked]=\"username.hasError('required')&&username.touched?'':null\">\n            {{'auth.userName' | translate}}\n            <span class=\"err-msg\" *ngIf=\"username.hasError('required')&&username.touched\">{{ 'reminder.blank' | translate: { key: ''} }}</span>\n          </ion-label>\n          <ion-input type=\"text\" [(ngModel)]=\"user.name\" [formControl]=\"username\" text-right></ion-input>\n        </ion-item>\n        <ion-item [class.error]=\"!password.valid&&password.touched\" class=\"disable-env-all\">\n          <ion-label [attr.stacked]=\"password.hasError('required')&&password.touched?'':null\">\n            {{'auth.password' | translate}}\n            <span class=\"err-msg\" *ngIf=\"password.hasError('required')&&password.touched\">{{'reminder.blank' | translate: { key: ''} }}</span>\n          </ion-label>\n          <ion-input type=\"password\" [(ngModel)]=\"user.password\" [formControl]=\"password\" text-right></ion-input>\n        </ion-item>\n      </form>\n      <button ion-button color=\"primary\" small float-right margin-top (click)=\"popToServer()\">{{'auth.serverSetting' | translate}}</button>\n    </div>\n\n    <ion-footer>\n      <button ion-button full no-margin color=\"gray\" (click)=\"loginWithProfile()\" *ngIf=\"coreStore.enableProfile && profileService.profilegroup\">\n        <ion-label color=\"primary\">{{'auth.loginWithProfile' | translate}}</ion-label>\n      </button>\n      <button ion-button full no-margin color=\"primary\" (click)=\"login()\" [disabled]=\"!loginForm.valid\">{{'auth.login' | translate}}</button>\n    </ion-footer>\n  "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService"},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder"},{"__symbolic":"reference","module":"ionic-angular","name":"NavController"},{"__symbolic":"reference","module":"../auth.service","name":"AuthService"},{"__symbolic":"reference","module":"../../core/providers/toast.service","name":"ToastService"},{"__symbolic":"reference","module":"../../core/providers/loading.service","name":"LoadingService"},{"__symbolic":"reference","module":"../../core/core.store","name":"CoreStore"},{"__symbolic":"reference","module":"../../core/providers/profile/profile.service","name":"ProfileService"}]}],"initForm":[{"__symbolic":"method"}],"initLoginInfo":[{"__symbolic":"method"}],"langChange":[{"__symbolic":"method"}],"login":[{"__symbolic":"method"}],"loginWithProfile":[{"__symbolic":"method"}],"popToServer":[{"__symbolic":"method"}],"setLangList":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}]}}}}]